sum(flips$1)
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(c(1,0),size=100,prob=c(0.7,0.3))
flips2<-rbinom(c(1,0),size=100,prob=0.7)
flips2<-rbinom(n=100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(cars,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,main="My Plot")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
play()
dim(mtcars)
head(mtcars)
nxt()
?boxplot
boxplot(formula=mpg ~cyl,data=mtcars)
hist(mtcars$mpg)
q()
library(swirl)
swirl()
library(swirl)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
?n
?n_distinct
submit()
submit()
pack_sum
submit()
pack_sum <- summarize(by_package,
count =n() ,
unique = n_distinct(ip_id),
countries =n_distinct(country) ,
avg_bytes = mean(size))
pack_sum
quantile(pack_sum$count,probs=0.99)
filter(pack_sum,count>679)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
cran %>%
select(ip_id,country,package,size) %>%
print
submit()
cran %>%
select(ip_id,country,package,size) %>%
print
submit()
submit()
submit()
submit()
library(tidyr)
bye()
library(swirl)
swirl()
students
?gather
gather(students,sex,coount,-grade)
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
students2 %>%
gather( sex_class ,count,-grade ) %>%
separate( sex_class, c("sex", "class")) %>%
print
submit()
submit()
students3
submit()
?spread
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(class ,test ) %>%
print
submit()
submit()
extract_numeric("class5")
?mutate
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
### Call to mutate() goes here %>%
mutate(class=extract_numeric(class))
print
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
### Call to mutate() goes here %>%
mutate(class=extract_numeric(class))%>%
print
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class=extract_numeric(class))%>%
print
students4
submit()
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed<-passed%>%mutate(status="passed")
failed<-failed%>%mutate(status="failed")
bindrows(passed,failed)
bind_rows(passed,failed)
sat
?gather
?separate
submit()
submit()
submit()
data2[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, GDP)][13]
library(swirl)
swirl()
bye()
swirl()
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par)
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NyC")
title(main="Wind and Ozone in NYC")
may<-subset(airquality, Month == 5)
points(Wind, Ozone, col = "blue")
points(may$Wind, may$Ozone, col = "blue")
points(may$Wind, may$Ozone, col = "blue",pch=17)
notmay<-subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red",pch=17)
points(notmay$Wind, notmay$Ozone, col = "red",pch=8)
legend("toprigh",c((17,8),c("blue","red"),c("May","other Months")))
legend("topright",c((17,8),c("blue","red"),c("May","other Months")))
legend("topright",pch=c(17,8),col=c("blue","red"),c("May","other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),ldw=2,lty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,aiquality$Ozone)
plot(airquality$Wind,airquality$Ozone)
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar,main="Ozone and Solar")
plot(airquality$Ozone,airquality$Solar,main="Ozone and Solar Radiation")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
library(swirl)
rm(list=ls())
swirl()
head(airquality)
xyplot(ozone~wind,airquality)
xyplot(ozone~wind,data=airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month),airquality,layout=c(5,1))
xyplot(Ozone~Wind|Month,airquality,layout=c(5,1))
p<-xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formaula"]]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R",local=TRUE)
pathtofile("plot1.R",TRUE)
pathtofile("plot1.R",local="TRUE")
myedit("pathtofile.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamond$color)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat|color*cut,diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab,myylab,main=mymain)
xyplot(price~carat|color*cut,diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3<-colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
col<-brewer.pal(3,"BuGn")
cosl<-brewer.pal(3,"BuGn")
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color(drv)))
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv))+labs=title("Swirl Rules!")+labs=(x="Displacement",y="Hwy Mileage"))
g+geom_point(aes(color=drv))+labs(title("Swirl Rules!"))+labs(x="Displacement",y="Hwy Mileage"))
g+geom_point(aes(color=drv))+labs(title("Swirl Rules!"))+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drc~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="highway Mileage",title="Swirl Rules!")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
exit
bye()
swirl()
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut())
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom(c("point","smooth")),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=(c("point","smooth")),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=(c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=((c("point","smooth")),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=((c("point","smooth")),method="lm"))
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm"))
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm"))
qplot(carat,price,data=diamonds,color=cut,geom= c("point","smooth"),method ="lm")
qplot(carat,price,data=diamonds,color=cut,geom= c("point","smooth"), method ="lm")
qplot(carat,price,data=diamonds,color=cut,geom= c("point","smooth"), method = "lm")
qplot(carat,price,data=diamonds,color=cut,geom= c("point","smooth"), method = "lm")
qplot(carat,price,data=diamonds,color=cut,geom =
c("point", "smooth"), method = "lm”)
qplot(carat,price,data=diamonds,color=cut,geom = c("point", "smooth"), method = "lm”)
qplot(carat,price,data=diamonds,color=cut,geom = c("point", "smooth"), method = "lm”)
qplot(carat,price,data=diamonds,color=cut,geom = c("point", "smooth"), method = "lm”)
;
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm"))
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
play()
qplot2<-qplot()
qplot<-function(...){}
nxt()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
play()
qplot()<-qplot2()
qplot()<-qplot2()
qplot2
qplot
qplot()<-qplot2
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
nxt()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
?qplot
bye
bye()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
table(BodyWeight$Diet)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
qplot(votes, rating, data = movies)
uninstall_course("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
install.packages("ggplot2", dependencies=TRUE)
install.packages("ggplot2", dependencies = TRUE)
bye()
bye()
install.packages("ggplot2", dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
?qplot
??qplot
library(swirl)
swirl()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
bye()
library(swirl)
swirl()
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth()
qplot(carat,price,data=diamonds,color=cut,facets=.~cut)+geom_smooth(method="lm")
g<-ggplot(diamonds,aes(depth,price))
g
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$cata,seq(0,1,length=4),na.rm=TRUE)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid=cut~car2
g+geom_point(alpha=1/3),facet_grid=cut~car2)
g+geom_point(alpha=1/3)+facet_grid=cut~car2)
g+geom_point((alpha=1/3),facet_grid=cut~car2)
g+geom_point(alpha=1/3)+facet_grid=cut~car2
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(cara,price))+geom_boxplot()+facet_grid(.~cut)
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
bye()
library(swirl)
swirl()
library(swirl)
rm(list=ls())
swirl()
install.packages("fields")
swirl()
dim
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub<-subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub<-subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0,x0sub,pch=20)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mno)
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-date.frame(state=names(mn0),mean=mno)
d0<-data.frame(state=names(mn0),mean=mno)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x
| < mrg$mean.y, ]
mrg[mrg$mean.x < mrg$mean.y,]
setwd("C:/Users/mkrishnamoorthy/Desktop/coursera/RepoResearch/Week2/RepData_PeerAssessment1")
